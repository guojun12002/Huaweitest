
#include "SliceIterator.h"

/******************************************************************************
功能：初始化一个切片迭代器，使其指向切片内的第一个元素
输入：
	  slice_desc    ： 切片描述符指针（合法性由考生检查）
	  slice_iterator： 切片迭代器指针
输出： 
	  slice_iterator： 初始化后的切片迭代器的指针
返回：
	  0：成功，-1：失败

说明： 
1）SliceIterator结构需要由考生自行设计和定义
2）迭代器内存由调用者申请，大小仅为sizeof(SliceIterator)，函数内部不得额外申请动态内存
3）用例保证其他接口的输入不会是未初始化过的迭代器指针	
******************************************************************************/
int SliceIteratorInit (const SliceDesc* slice_desc, SliceIterator* slice_iterator)

{
	/* 在这里实现功能 */
	return 0;
}

/******************************************************************************
功能：获取当前元素指针
输入：
	  slice_iterator：迭代器指针
输出：无
返回：指向当前元素的指针。若迭代结束，应返回空指针。
******************************************************************************/
int* SliceIteratorGetCurr(const SliceIterator* slice_iterator)
{
	/* 在这里实现功能 */
	return 0;
}

/******************************************************************************
功能：移动到下一个元素
输入：
	  slice_iterator  迭代器指针
输出：
	  slice_iterator  更新后的迭代器
返回：无
******************************************************************************/
void SliceIteratorNext(SliceIterator* slice_iterator)
{
	/* 在这里实现功能 */
	return;
}

/******************************************************************************
功能：迭代是否结束
输入：
	  slice_iterator:   迭代器指针
输出：无
返回：1: 迭代已结束; 0:迭代未结束
******************************************************************************/
int SliceIteratorEnd(const SliceIterator* slice_iterator)
{
	/* 在这里实现功能 */
	return 1;
}

/******************************************************************************
功能：创建一个数组切片的拷贝
输入：slice_desc:  切片描述符指针（合法性由考生检查）
输出：
	  first_element_of_slice_array:新的切片数组的第一个元素指针
	  slice_element_num:新的切片数组中元素个数
返回：0：成功，-1:失败

说明：first_element_of_slice_array内存在函数内申请，调用者释放
******************************************************************************/
int CopySlice(const SliceDesc* slice_desc,int** first_element_of_slice_array, unsigned long* slice_element_num)
{
	/* 在这里实现功能 */
	return 0;
}